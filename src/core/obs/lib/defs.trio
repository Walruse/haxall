//
// Copyright (c) 2020, SkyFoundry LLC
// Licensed under the Academic Free License version 3.0
//
// History:
//    13 Apr 2020  Brian Frank  Creation
//

--------------------------------------------------------------------------
def: ^observes
is: ^choice
of: ^observable
doc: "Observable subscription - see [docs]`docHaxall::Observables`"
--------------------------------------------------------------------------
def: ^observable
is: ^marker
docTaxonomy
doc: "Observable subscription - see [docs]`docHaxall::Observables`"
--------------------------------------------------------------------------

//////////////////////////////////////////////////////////////////////////
// Recs (base class)
//////////////////////////////////////////////////////////////////////////

--------------------------------------------------------------------------
def: ^obsRecs
is: ^observable
doc: "Base class for observables on database records"
--------------------------------------------------------------------------
def: ^obsFilter
is: ^filterStr
tagOn: ^obsRecs
doc:
  Filter string to define the record data set observed.  If omitted
  then all records in the database are observed.  Note that obsFilter
  may **not** use the '->' pathing operator.
--------------------------------------------------------------------------

//////////////////////////////////////////////////////////////////////////
// Schedule
//////////////////////////////////////////////////////////////////////////

--------------------------------------------------------------------------
def: ^obsSchedule
is: ^observable
doc:
  Subscribe to scheduled timer event - see [docs]`docHaxall::Observables#obsSchedule`
--------------------------------------------------------------------------
def: ^obsScheduleFreq
is: ^duration
tagOn: ^obsSchedule
minVal: 1sec
doc: "Schedule events with given frequency"
--------------------------------------------------------------------------
def: ^obsScheduleTimes
is: ^list
of: ^time
tagOn: ^obsSchedule
doc: "Schedule events for given times of the day"
--------------------------------------------------------------------------
def: ^obsScheduleDaysOfMonth
is: ^str
tagOn: ^obsSchedule
doc:
  Schedule events for given days of the month.  Encode as a comma separated
  list for day of the month such as "1,15".  Negative values may be used
  to represent days for end of the month.  For example "-1" represents
  the last day of the month, "-2" the second to last, etc.
--------------------------------------------------------------------------
def: ^obsScheduleDaysOfWeek
is: ^str
tagOn: ^obsSchedule
doc:
  Schedule events for given days of the week.  Encode as a comma separated
  list of the three letter enums: sun, mon, tue, wed, thu, fri, or sat.
--------------------------------------------------------------------------
def: ^obsScheduleSpan
is: ^span
tagOn: ^obsSchedule
doc:
  Schedule events only during the configured span of time.
--------------------------------------------------------------------------

//////////////////////////////////////////////////////////////////////////
// Commits
//////////////////////////////////////////////////////////////////////////

--------------------------------------------------------------------------
def: ^obsCommits
is: ^obsRecs
doc:
  Subscribe to record commits in Folio - see [docs]`docHaxall::Observables#obsCommits`
--------------------------------------------------------------------------
def: ^obsAdds
is: ^marker
tagOn: ^obsCommits
doc: "Process when a new data item is added to the observed data set."
--------------------------------------------------------------------------
def: ^obsUpdates
is: ^marker
tagOn: ^obsCommits
doc: "Process when an existing data item is updated in the observed data set."
--------------------------------------------------------------------------
def: ^obsRemoves
is: ^marker
tagOn: ^obsCommits
doc: "Process when an existing data item is removed from the observed data set."
--------------------------------------------------------------------------
def: ^obsAddOnInit
is: ^marker
tagOn: ^obsCommits
doc: "Fire add event for all existing records in data set on initialization."
--------------------------------------------------------------------------

//////////////////////////////////////////////////////////////////////////
// Watches
//////////////////////////////////////////////////////////////////////////

--------------------------------------------------------------------------
def: ^obsWatches
is: ^obsRecs
doc:
  Subscribe to watch and unwatch events - see [docs]`docHaxall::Observables#obsWatches`
--------------------------------------------------------------------------

//////////////////////////////////////////////////////////////////////////
// CurVal
//////////////////////////////////////////////////////////////////////////

--------------------------------------------------------------------------
def: ^obsCurVals
is: ^obsRecs
doc:
  Subscribe to transient commits of curVal or curStatus -
  see [docs]`docHaxall::Observables#obsCurVals`
--------------------------------------------------------------------------

//////////////////////////////////////////////////////////////////////////
// HisWrites
//////////////////////////////////////////////////////////////////////////

--------------------------------------------------------------------------
def: ^obsHisWrites
is: ^obsRecs
doc:
  Subscribe to history data updates- see [docs]`docHaxall::Observables#obsHisWrites`
--------------------------------------------------------------------------


